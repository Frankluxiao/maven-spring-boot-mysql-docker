# Define 'Service' to expose backend application deployment
apiVersion: v1
kind: Service
metadata:
  name: maven-spring-boot
spec:
  selector:  # backend application pod labels should match these
    app: maven-spring-boot-mysql
    tier: backend
  ports:
    - protocol: "TCP"
      port: 80
      targetPort: 8080
      nodePort: 30001
  type: LoadBalancer   # use NodePort, if you are not running Kubernetes on cloud
---
# Configure 'Deployment' of backend application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: maven-spring-boot
  labels:
    app: maven-spring-boot-mysql
    tier: backend
spec:
#  replicas: 2    # Number of replicas of back-end application to be deployed
  selector:
    matchLabels: # backend application pod labels should match these
      app: maven-spring-boot-mysql
      tier: backend
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' labels
        app: maven-spring-boot-mysql
        tier: backend
    spec:
      containers:
        - name: maven-spring-boot
          image: frankluxiao/maven-spring-boot-mysql   # docker image of backend application
          env:   # Setting Enviornmental Variables
            - name: DB_HOST   # Setting Database host address from configMap
              valueFrom:
                configMapKeyRef:
                  name: mysql-config  # name of configMap
                  key: host
            - name: DB_NAME  # Setting Database name from configMap
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: name
            - name: DB_USERNAME  # Setting Database username from Secret
              valueFrom:
                secretKeyRef:
                  name: mysql-secret # Secret Name
                  key: username
            - name: DB_PASSWORD # Setting Database password from Secret
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: password
          ports:
            - containerPort: 8080